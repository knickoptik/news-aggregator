@import "./variables";

html {
  height: 100%;
  background-color: $background-color;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  font-family: "Exo 2", "Roboto", "Open Sans", sans-serif !important;
  font-size: 16px;
  color: $text-color;
  /* Prevents responsive Css grid from collapsing. */
  min-height: 100vh;
}

li {
  list-style-type: none;
}

a:link {
  text-decoration: none;
}

a:visited {
  text-decoration: none;
}

button {
  /* Remove default style from button. */
  border: none;
  box-shadow: inset 0 0 0 0 $on-hover;
  transition: ease-out 0.8s;
  margin: 1em auto 1em auto;
  width: 26em;
}

/* Fills with yellow color from left to right. */
button:hover {
  box-shadow: inset 30em 0 0 0 $on-hover;
  color: $text-color;
}


/* Animation is displayed while data from api is requested. */
#loading{
  animation: spin 4.5s infinite linear;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  } to {
      transform: rotate(360deg);
    }
}

.loadingContainer {
  text-align: center;
  margin-top: 2.5em;
  margin-bottom: 2.5em;
}

/* Styles for responsive images. */

img {
  /* Prevent images from overflowing. */
  max-width: 100%;
  height: auto;
  /* Removed from the normal document flow. Stays at the default position which is its parent div. */
  position: absolute;
  /* Set coordinates to zero. The element now needs to know which parent is its reference point for its position. */
  left: 0;
  top: 0;
}

#image-container {
  /* Container for absolute positioned elements. */
  position: relative;
  /* Sets the aspect ratio to 16:9 -> A width of " " % of the parent container. */
  padding-top: 56.25%;
  /* Images that have a bigger height than the parent container are cropped. */
  overflow: hidden;
}
